{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Code Source\\\\Apori\\\\src\\\\navigation\\\\Routes.tsx\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Center } from \"../components/Center\";\nimport { AuthContext } from \"./AuthProvider\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AppTabs } from \"./AppTabs\";\nimport { AuthStack } from \"./AuthStack\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nvar Stack = createStackNavigator();\nexport var Routes = function Routes(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      login = _useContext.login;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem('user').then(function (userString) {\n      if (userString) {\n        login();\n      }\n\n      setLoading(false);\n      console.log(userString);\n    }).catch(function (err) {\n      console.log(err);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return React.createElement(Center, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, user ? React.createElement(AppTabs, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }) : React.createElement(AuthStack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }));\n};","map":{"version":3,"sources":["D:/Code Source/Apori/src/navigation/Routes.tsx"],"names":["React","useContext","useEffect","useState","createStackNavigator","NavigationContainer","Center","AuthContext","AsyncStorage","AppTabs","AuthStack","Stack","Routes","user","login","loading","setLoading","getItem","then","userString","console","log","catch","err"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,MAAT;AACA,SAASC,WAAT;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,OAAT;AACA,SAASC,SAAT;;AAMA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;AAEA,OAAO,IAAMQ,MAA6B,GAAG,SAAhCA,MAAgC,OAAQ;AAAA;;AAAA,oBACzBX,UAAU,CAACM,WAAD,CADe;AAAA,MACzCM,IADyC,eACzCA,IADyC;AAAA,MACnCC,KADmC,eACnCA,KADmC;;AAAA,kBAEnBX,QAAQ,CAAC,IAAD,CAFW;AAAA;AAAA,MAE1CY,OAF0C;AAAA,MAEjCC,UAFiC;;AAIjDd,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EACCC,IADD,CACM,UAAAC,UAAU,EAAI;AAChB,UAAGA,UAAH,EAAc;AACVL,QAAAA,KAAK;AACR;;AACDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,KAPD,EAQCG,KARD,CAQO,UAAAC,GAAG,EAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAXD;AAYH,GAbQ,EAaN,EAbM,CAAT;;AAeA,MAAID,OAAJ,EAAa;AACT,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AACD,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,CADJ;AAKH,CA/BM","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { Center } from '../components/Center';\r\nimport { AuthContext } from './AuthProvider';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { AppTabs } from './AppTabs';\r\nimport { AuthStack } from './AuthStack';\r\nimport { ActivityIndicator } from 'react-native';\r\n\r\ninterface RoutesProps {\r\n\r\n}\r\nconst Stack = createStackNavigator();\r\n\r\nexport const Routes: React.FC<RoutesProps> = ({}) => {\r\n    const { user, login } = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        AsyncStorage.getItem('user')\r\n        .then(userString => {\r\n            if(userString){\r\n                login();\r\n            } \r\n            setLoading(false)\r\n            console.log(userString)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            setLoading(false);\r\n        })\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return (\r\n            <Center>\r\n                <ActivityIndicator size = 'large'/>\r\n            </Center>\r\n        )\r\n    }\r\n    return (\r\n        <NavigationContainer>\r\n          {user ? <AppTabs /> : <AuthStack />}\r\n        </NavigationContainer>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}