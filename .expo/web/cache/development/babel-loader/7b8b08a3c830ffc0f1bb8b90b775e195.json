{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"D:\\\\Code Source\\\\Apori\\\\src\\\\Routes.tsx\",\n    _this = this;\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Center } from \"./Center\";\nimport { AuthContext } from \"./AuthProvider\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar Stack = createStackNavigator();\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      login = _useContext.login;\n\n  return React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"I am a Login screen\"), React.createElement(Button, {\n    title: \"log me in\",\n    onPress: function onPress() {\n      login();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"go to register\",\n    onPress: function onPress() {\n      navigation.navigate('Register');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction Register(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"I am a Register screen\"), React.createElement(Button, {\n    title: \"go to login\",\n    onPress: function onPress() {\n      navigation.navigate('Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport var Routes = function Routes(_ref3) {\n  _objectDestructuringEmpty(_ref3);\n\n  var _useContext2 = useContext(AuthContext),\n      user = _useContext2.user,\n      login = _useContext2.login;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem('user').then(function (userString) {\n      if (userString) {\n        login();\n      }\n\n      setLoading(false);\n      console.log(userString);\n    }).catch(function (err) {\n      console.log(err);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return React.createElement(Center, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, user ? React.createElement(Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"you exist\")) : React.createElement(Stack.Navigator, {\n    screenOptions: {\n      header: function header() {\n        return null;\n      }\n    },\n    initialRouteName: \"Login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: Login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: Register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["D:/Code Source/Apori/src/Routes.tsx"],"names":["React","useContext","useEffect","useState","createStackNavigator","NavigationContainer","Center","AuthContext","AsyncStorage","Stack","Login","navigation","route","login","navigate","Register","Routes","user","loading","setLoading","getItem","then","userString","console","log","catch","err","header"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { NavigationContainer, RouteProp } from '@react-navigation/native'\r\nimport { View, Text, Button, ActivityIndicator } from 'react-native';\r\nimport { Center } from './Center';\r\nimport { StackNavigationConfig, StackNavigationProp } from '@react-navigation/stack/lib/typescript/src/types';\r\nimport { AuthNavProps, AuthParamList } from './AuthParamList';\r\nimport { AuthContext } from './AuthProvider';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\ninterface RoutesProps {\r\n\r\n}\r\nconst Stack = createStackNavigator();\r\n\r\nfunction Login({ navigation, route } : AuthNavProps<'Login'>){\r\n    const {login} = useContext(AuthContext);\r\n    return(\r\n        <Center>\r\n            <Text>I am a Login screen</Text>\r\n            <Button\r\n                title='log me in'\r\n                onPress={() => {\r\n                    login();\r\n                }} />\r\n            <Button\r\n                title='go to register'\r\n                onPress={() => {\r\n                    navigation.navigate('Register')\r\n                }} />\r\n        </Center>\r\n\r\n    )\r\n}\r\nfunction Register({navigation} : AuthNavProps<'Register'>){\r\n    return(\r\n        <Center>\r\n            <Text>I am a Register screen</Text>\r\n            <Button\r\n                title='go to login'\r\n                onPress={() => {\r\n                    navigation.navigate('Login')\r\n                }}></Button>\r\n        </Center>\r\n\r\n    )\r\n}\r\n\r\nexport const Routes: React.FC<RoutesProps> = ({}) => {\r\n    const { user, login } = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        AsyncStorage.getItem('user')\r\n        .then(userString => {\r\n            if(userString){\r\n                login();\r\n            } \r\n            setLoading(false)\r\n            console.log(userString)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            setLoading(false);\r\n        })\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return (\r\n            <Center>\r\n                <ActivityIndicator size = 'large'/>\r\n            </Center>\r\n        )\r\n    }\r\n    return (\r\n        <NavigationContainer>\r\n            {user ? (\r\n                <Center>\r\n                    <Text>\r\n                        you exist\r\n                    </Text>\r\n                </Center>\r\n            ):( \r\n            <Stack.Navigator screenOptions ={{\r\n                        header : ()=>null\r\n                    }} initialRouteName='Login'>\r\n                <Stack.Screen name = 'Login' component={Login} />\r\n                <Stack.Screen name = 'Register' component={Register} />\r\n            </Stack.Navigator>\r\n            )}\r\n        </NavigationContainer>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}