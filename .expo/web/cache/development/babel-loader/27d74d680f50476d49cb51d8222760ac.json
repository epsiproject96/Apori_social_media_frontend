{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Code Source\\\\Apori\\\\src\\\\navigation\\\\AuthProvider.tsx\";\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { useState } from 'react';\nexport var AuthContext = React.createContext({\n  user: null,\n  login: function login() {},\n  logout: function logout() {}\n});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      login: function login() {\n        var fakeUser = {\n          username: 'bob'\n        };\n        setUser(fakeUser);\n        AsyncStorage.setItem('user', JSON.stringify(fakeUser));\n      },\n      logout: function logout() {\n        setUser(null);\n        AsyncStorage.removeItem('user');\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, children);\n};","map":{"version":3,"sources":["D:/Code Source/Apori/src/navigation/AuthProvider.tsx"],"names":["AsyncStorage","React","useState","AuthContext","createContext","user","login","logout","AuthProvider","children","setUser","fakeUser","username","setItem","JSON","stringify","removeItem"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAIA,OAAO,IAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,CAIxB;AACCC,EAAAA,IAAI,EAAE,IADP;AAECC,EAAAA,KAAK,EAAE,iBAAM,CAAE,CAFhB;AAGCC,EAAAA,MAAM,EAAE,kBAAM,CAAE;AAHjB,CAJwB,CAApB;AAcP,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAA4C,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBAC7CP,QAAQ,CAAO,IAAP,CADqC;AAAA;AAAA,MAC9DG,IAD8D;AAAA,MACxDK,OADwD;;AAErE,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,IAAI,EAAJA,IADK;AAELC,MAAAA,KAAK,EAAE,iBAAM;AACX,YAAMK,QAAQ,GAAG;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAjB;AACAF,QAAAA,OAAO,CAACC,QAAD,CAAP;AACAX,QAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA7B;AACD,OANI;AAOLJ,MAAAA,MAAM,EAAE,kBAAM;AACZG,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAV,QAAAA,YAAY,CAACgB,UAAb,CAAwB,MAAxB;AACD;AAVI,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGP,QAbH,CADF;AAiBH,CAnBM","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { useState } from 'react'\r\nimport { AuthNavProps } from './AuthParamList';\r\n\r\ntype User = null | {username: string}\r\nexport const AuthContext = React.createContext<{\r\n    user: User,\r\n    login: () => void,\r\n    logout: () => void\r\n}>({\r\n    user: null,\r\n    login: () => {},\r\n    logout: () => {} \r\n});\r\n\r\ninterface AuthProviderProps {\r\n\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({children}) => {\r\n    const [user, setUser] = useState<User>(null);\r\n    return (\r\n      <AuthContext.Provider\r\n        value={{\r\n          user,\r\n          login: () => {\r\n            const fakeUser = {username: 'bob'};\r\n            setUser(fakeUser);\r\n            AsyncStorage.setItem('user', JSON.stringify(fakeUser));\r\n          },\r\n          logout: () => {\r\n            setUser(null);\r\n            AsyncStorage.removeItem('user');\r\n          },\r\n        }}>\r\n        {children}\r\n      </AuthContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}