{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Code Source\\\\Apori\\\\src\\\\screens\\\\Login.tsx\";\nimport React, { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { buttons, styles } from \"../CSS/CSS\";\nimport { AuthContext } from \"../navigation/AuthProvider\";\nexport function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      login = _useContext.login;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, ModalVisible ? React.createElement(View, {\n    style: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, 'Renseignez votre adresse mail ci dessous.\\nVous recevrez un email contenant votre nouveau mot de passe que vous pourrez modifier par la suite dans votre profil.')) : null, React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"APORI\"), React.createElement(Text, {\n    style: styles.title2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Se connecter\"), React.createElement(TextInput, {\n    autoCompleteType: 'email',\n    keyboardType: 'email-address',\n    placeholder: 'Adresse mail',\n    style: styles.inputText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    autoCompleteType: 'email',\n    placeholder: 'Mot de passe',\n    secureTextEntry: true,\n    style: styles.inputText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.hint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Mot de passe oubli\\xE9 ?\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Register');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.hint2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, 'Pas encore de compte ? \\nCliquez ici pour en créer un !')), React.createElement(TouchableOpacity, {\n    style: buttons.connect,\n    onPress: function onPress() {\n      return login();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: buttons.connectText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \" \", '->', \" \"))));\n}","map":{"version":3,"sources":["D:/Code Source/Apori/src/screens/Login.tsx"],"names":["React","useContext","useState","buttons","styles","AuthContext","Login","navigation","login","ModalVisible","setModalVisible","modal","body","title","title2","inputText","hint","navigate","hint2","connect","connectText"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;;AAIA,SAASC,OAAT,EAAkBC,MAAlB;AAEA,SAASC,WAAT;AAEA,OAAO,SAASC,KAAT,OAAmD;AAAA,MAAnCC,UAAmC,QAAnCA,UAAmC;;AAAA,oBACtCN,UAAU,CAACI,WAAD,CAD4B;AAAA,MAC/CG,KAD+C,eAC/CA,KAD+C;;AAAA,kBAEdN,QAAQ,CAAC,KAAD,CAFM;AAAA;AAAA,MAE/CO,YAF+C;AAAA,MAEjCC,eAFiC;;AAGtD,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,YAAY,GACb,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEL,MAAM,CAACO,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,kKAAP,CAFJ,CADa,GAMb,IAPA,EASA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI,oBAAC,SAAD;AACA,IAAA,gBAAgB,EAAI,OADpB;AAEA,IAAA,YAAY,EAAI,eAFhB;AAGA,IAAA,WAAW,EAAI,cAHf;AAIA,IAAA,KAAK,EAAEV,MAAM,CAACW,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAQI,oBAAC,SAAD;AACA,IAAA,gBAAgB,EAAI,OADpB;AAEA,IAAA,WAAW,EAAI,cAFf;AAGA,IAAA,eAAe,EAAI,IAHnB;AAIA,IAAA,KAAK,EAAEX,MAAM,CAACW,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAaI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAIL,eAAe,CAAC,IAAD,CAAnB;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACY,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,CAbJ,EAiBI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAMT,UAAU,CAACU,QAAX,CAAoB,UAApB,CAAN;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B,yDAA5B,CAFJ,CAjBJ,EAsBI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAIf,OAAO,CAACgB,OADrB;AAEI,IAAA,OAAO,EAAI;AAAA,aAAMX,KAAK,EAAX;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIL,OAAO,CAACiB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAsC,IAAtC,MAHR,CAtBJ,CATA,CADJ;AAwCH","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { useContext, useState } from 'react'\r\nimport { Button, Text, View } from 'react-native'\r\nimport { TextInput, TouchableOpacity } from 'react-native';\r\nimport { Center } from '../components/Center';\r\nimport { buttons, styles } from '../CSS/CSS';\r\nimport { AuthNavProps } from '../navigation/AuthParamList';\r\nimport { AuthContext } from '../navigation/AuthProvider';\r\n\r\nexport function Login({navigation}: AuthNavProps<'Login'>){\r\n    const {login} = useContext(AuthContext);\r\n    const [ModalVisible, setModalVisible] = useState(false);\r\n    return (\r\n        <View>\r\n        {ModalVisible ? \r\n        <View\r\n            style={styles.modal}>\r\n            <Text>{'Renseignez votre adresse mail ci dessous.\\nVous recevrez un email contenant votre nouveau mot de passe que vous pourrez modifier par la suite dans votre profil.'}</Text>\r\n        </View>\r\n        :\r\n        null\r\n        }\r\n        <View style={styles.body}>\r\n            <Text style={styles.title}>APORI</Text>\r\n            <Text style={styles.title2}>Se connecter</Text>\r\n            <TextInput \r\n            autoCompleteType = {'email'}\r\n            keyboardType = {'email-address'}\r\n            placeholder = {'Adresse mail'}\r\n            style={styles.inputText} />\r\n            <TextInput \r\n            autoCompleteType = {'email'}\r\n            placeholder = {'Mot de passe'}\r\n            secureTextEntry = {true}\r\n            style={styles.inputText}/>\r\n            <TouchableOpacity\r\n                onPress={()=>setModalVisible(true)}>\r\n                <Text style={styles.hint}>Mot de passe oublié ?</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                onPress={() => navigation.navigate('Register')}>\r\n                <Text style={styles.hint2}>{'Pas encore de compte ? \\nCliquez ici pour en créer un !'}</Text>\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity\r\n                style = {buttons.connect}\r\n                onPress = {() => login()}>\r\n                    <Text style = {buttons.connectText}> {'->'} </Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}